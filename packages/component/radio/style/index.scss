@import '../../style/index.scss';
$radio-size-list: (
  'large': (
    zoosemy-circle: 28px,
    zoosemy-dot: 14px,
  ),
  'medium': (
    zoosemy-circle: 22px,
    zoosemy-dot: 12px,
  ),
  'small': (
    zoosemy-circle: 20px,
    zoosemy-dot: 10px,
  ),
);
$color-active: $color-primary;
$color-inactive: #9baacf;

@mixin size-content($key, $size) {
  $result: map-get($radio-size-list, $key);
  height: map-get($size, 'height');
  font-size: map-get($size, 'font-size');

  .#{$radio}__input {
    width: map-get($size, 'height');
    &::before {
      width: map-get($result, 'zoosemy-circle');
      height: map-get($result, 'zoosemy-circle');
    }
    &::after {
      width: map-get($result, 'zoosemy-dot');
      height: map-get($result, 'zoosemy-dot');
      top: calc(50% - #{map-get($result, 'zoosemy-dot') / 2});
      left: calc(50% - #{map-get($result, 'zoosemy-dot') / 2});
    }
  }
}

.#{$radio} {
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
  .#{$radio}__input {
    height: 100%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    margin-right: 10px;
    position: relative;
    &:before {
      content: '';
      background-color: $color-white;
      border-radius: 50%;
      transition: all $animation-duration-fast ease-in-out;
      border: 1px solid $color-inactive;
    }
    &::after {
      content: '';
      border-radius: 50%;
      background-color: $color-inactive;
      transition: all $animation-duration-fast ease-in-out;
      position: absolute;
      z-index: 1;
    }
    .#{$radio}__origin {
      opacity: 0;
      outline: none;
      position: absolute;
      z-index: -1;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      margin: 0;
    }
  }
  .#{$radio}__label {
    color: rgb(155, 170, 207);
  }

  &:not(.is-disabled) {
    &:hover,
    &:focus,
    &:active {
      .#{$radio}__input {
        &::before {
          border: 1px solid $color-active;
        }
      }
    }
  }
  &.is-disabled {
    .#{$radio}__input {
      &::before {
        border: 1px solid mix($color-primary, #eaeaea, 35%);
      }
    }
  }

  &.is-checked {
    .#{$radio}__label {
      color: rgb(109, 93, 252);
    }
  }

  //Size
  @each $size-key, $size in $size-list {
    @if ($size-key == 'medium') {
      @include size-content($size-key, $size);
    } @else {
      &.is-#{$size-key} {
        @include size-content($size-key, $size);
      }
    }
  }

  //type
  &.is-zoosemy {
    .#{$radio}__input {
      &::before {
        border: none;
        box-shadow: $zoosemy-shadow-out-light;
      }
    }
    &:not(.is-disabled) {
      &.is-checked {
        .#{$radio}__input {
          &:before {
            box-shadow: $zoosemy-shadow-inset-light;
          }
        }
      }
    }

    &.is-disabled {
      .#{$radio}__input {
        &::before {
          box-shadow: -0.23em -0.23em 0.5em rgba(255, 255, 255, 25%),
            0.35em 0.35em 0.7em rgba(174, 174, 192, 0.4);
        }
      }
      &.is-checked {
        .#{$radio}__input {
          &::before {
            box-shadow: inset 0.1em 0.1em 0.12em #c8d0e7,
              inset -0.1em -0.1em 0.12em #fff;
          }
        }
      }
    }
  }

  //Disabled
  &:not(.is-disabled) {
    &:hover,
    &:focus,
    &:active {
      .#{$radio}__input {
        &::after {
          background-color: $color-primary;
        }
      }
      .#{$radio}__label {
        color: $color-primary;
      }
    }

    &.is-checked {
      .#{$radio}__input {
        &::after {
          background-color: $color-primary;
        }
      }
    }
  }
  &.is-disabled {
    cursor: not-allowed;
    .#{$radio}__input {
      &::before {
        background-color: mix($color-white, #eaeaea, 55%);
      }
      &::after {
        background-color: mix(#9baacf, #eaeaea, 55%);
      }
    }
    &.is-checked {
      .#{$radio}__input {
        &::after {
          background-color: mix($color-primary, #eaeaea, 35%);
        }
      }
    }
  }
}
