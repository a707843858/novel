@import '../../style/index.scss';
$size-list: 'large', 'medium', 'small';
// $size-height-list: 28px, 22px, 18px;
$size-height-list: 40px, 32px, 28px;
$size-font-list: 16px, 14px, 12px;
$size-circle-list: 28px, 22px, 20px;
$size-top-list: 6px, 5px, 4px;
$size-left-list: 6px, 5px, 4px;
$size-dot-list: 14px, 11px, 10px;
$size-min-width-list: 80px, 60px, 50px;

@mixin size-context($i) {
  height: nth($size-height-list, $i);
  font-size: nth($size-font-list, $i);
  min-width: nth($size-min-width-list, $i);
  user-select: none;
  &.#{$switch} {
    padding: 0 6px 0 30px;
    &::before {
      width: nth($size-circle-list, $i);
      height: nth($size-circle-list, $i);
      top: nth($size-top-list, $i);
    }
    &:after {
      width: nth($size-dot-list, $i);
      height: nth($size-dot-list, $i);
      top: calc(
        #{nth($size-top-list, $i)} + #{(
            nth($size-circle-list, $i) - nth($size-dot-list, $i)
          ) / 2}
      );
    }

    .#{$switch}__input {
      position: absolute;
      width: 0;
      height: 0;
      opacity: 0;
      margin: 0;
    }

    &:not(.is-checked) {
      &::before {
        left: nth($size-left-list, $i);
        right: auto;
      }
      &::after {
        left: calc(
          #{nth($size-top-list, $i)} + #{(
              nth($size-circle-list, $i) - nth($size-dot-list, $i)
            ) / 2}
        );
        right: auto;
      }
    }
    &.is-checked {
      padding: 0 30px 0 6px;
      background-color: $color-primary;
      &::before {
        left: auto;
        right: nth($size-left-list, $i);
      }
      &::after {
        left: auto;
        right: calc(
          #{nth($size-top-list, $i)} + #{(
              nth($size-circle-list, $i) - nth($size-dot-list, $i)
            ) / 2}
        );
        background-color: $color-primary;
      }
    }
    &:not(.is-disabled) {
      &:active {
        &::before {
          //width: calc(100% - #{nth($size-left-list, $i) * 2});
          width: 50%;
        }
        &::after {
          opacity: 1;
          width: 30%;
        }
      }
    }
  }
}

:host {
  border-radius: 999px;
  position: relative;
  display: inline-block;
  vertical-align: top;
  cursor: pointer;

  .#{$switch}-checkbox {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    z-index: 1;
    width: 100%;
    height: 100%;
  }
  .#{$switch} {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    background-color: #fff;
    border-radius: inherit;
    position: relative;
    background-color:#9baacf;
    color: #fff;
    transition: all $animation-duration-base
      cubic-bezier(0.78, 0.14, 0.15, 0.86);
    .n-switch-inner {
      display: inline-flex;
      align-items: center;
      height: 100%;
      user-select: none;
    }
    &::before {
      content: '';
      position: absolute;
      border-radius: inherit;
      background-color: #fff;
      transition: all $animation-duration-fast ease-in-out;
      z-index: 1;
    }
    &::after {
      content: '';
      position: absolute;
      z-index: 2;
      border-radius: inherit;
      background-color: #9baacf;
      transition: all $animation-duration-fast ease-in-out;
        //cubic-bezier(0.78, 0.14, 0.15, 0.86);
    }

    //size
    @for $i from 1 to length($size-list) + 1 {
      @if (nth($size-list, $i) == medium) {
        @include size-context($i);
      } @else {
        &.is-#{nth($size-list, $i)} {
          @include size-context($i);
        }
      }
    }

    //zoosemy
    &.is-zoosemy {
      background-color: #e4ebf5;
      box-shadow: -0.23em -0.23em 0.5em #ffffffb3, 0.35em 0.35em 0.7em $gray-2;
      color: rgb(155, 170, 207);

      /** Not Disabled */
      &:not(.is-disabled) {
        &:not(.is-checked) {
          &::before {
            box-shadow: -0.23em -0.23em 0.5em #ffffffb3,
              0.35em 0.35em 0.7em $gray-2;
          }
          &:active,
          &:hover {
            box-shadow: inset 0.1em 0.1em 0.12em #c8d0e7,
              inset -0.1em -0.1em 0.12em #fff;
          }
        }
        &.is-checked {
          background-color: #e4ebf5;
          box-shadow: inset 0.1em 0.1em 0.12em #c8d0e7,
            inset -0.1em -0.1em 0.12em #fff;
          &::before {
            box-shadow: -0.23em -0.23em 0.5em #ffffffb3,
              0.35em 0.35em 0.7em $gray-2;
          }
        }
      }

      &.is-disabled {
        color: rgba(29, 28, 26, 0.64);
        background-color: #eaeaea;
        box-shadow: -0.23em -0.23em 0.5em rgba(174, 174, 192, 0.4),
          0.35em 0.35em 0.7em rgba(255, 255, 255, 25%);
        &:before {
          background-color: mix($color-white, #eaeaea, 55%);
        }
        &:after {
          background-color: mix(#9baacf, #eaeaea, 55%);
        }
        &.is-checked {
          box-shadow: inset 0.1em 0.1em 0.12em #c8d0e7,
            inset -0.1em -0.1em 0.12em #fff;
          &:after {
            background-color: mix($color-primary, #eaeaea, 35%);
          }
        }
      }
    }
  }
}
